<%= render "home/navbar" %>
		
<div class="">
	<div class="row ">
		<div class="col-lg-2 filter_border">
			<div class="filter card border-0 my-3 mx-3 " style="width: 18rem">
				<h4 class="card-title text-center my-2">Filters</h4>
				<div class="card-body">
					<form id="form" action="<% request.query_parameters %>" method="get" >
						<div class="mb-3">
							<label class="fs-5">Filter By Price or Name</label>
							<%= select_tag :sort_option,options_for_select([["Choose",""],["Low to High","low_to_high"],["High to Low","high_to_low"],["Name","name"]],request.params.merge[:sort_option]),{onchange: "this.form.submit()", class: "form-select"}  %>	

						</div>
			 			<div class="mb-3">
							<label class="fs-5">Filter By Status</label>
							<%= select_tag :status,options_for_select([["Choose",""],["Available","available"],["Sold","sold"]],request.params.merge[:status]),{ onchange: "this.form.submit()", class: "form-select"} %>	
						</div>
						<div class="mb-3">

							<label class="fs-5">Filter By Price</label>
							<input type="text" id="min_price" name="min_price" placeholder="min" class="form-control mb-2">
							<input type="text" id="max_price" name="max_price" placeholder="max" class="form-control" >
							<input type="submit" class="btn btn-outline-success my-1">	
						</div>

						<div class="mb-3">
		 					<%= link_to "Clear filter",request.params.clear, class: "btn btn-outline-success " %>
		 				</div>

					</form>
				</div>		
			</div>
		</div>
		<div class="col-lg-10 scrollable">
			<div class="card border-1 my-3" style="width: 94rem;">
				<p class="fw-bold my-2 mx-3 ">Applied Filters 
				<span class="text-secondary mx-3"> 
					<% request.query_parameters.each do |key,value| %>
						<% if value != "" %>
							<% if key == 'min_price' || key == 'max_price' %>
								<button class="btn btn-secondary"> 
								<%= key == 'min_price' ? "Minimum Price" : "Maximum Price" %> 
								<%= value %>	
								</button>
							<% else %>
								<%= link_to "#{value}",request.query_parameters.delete(key),class: "btn btn-secondary"  %>
							<% end %>
						<% end %>
					<% end %>
				</span>
				</p>
			</div>
			<h3 class="bg-secondary text-light text-center p-1">Property Count : <%= @property.count%> </h3>
			<div class="d-flex justify-content-between"> 
				<h2> All Properties</h2>
				<div class="d-flex my-3 mx-4">
					<button id="grid" onclick="myFunction(this)" class="px-4 py-2 border-0">
	 					<i class="fa fa-solid fa-table"></i>
					</button>
					<button id="list" onclick="myFunction(this)" class="px-4 py-2 border-0">
	 					<i class="fa fa-solid fa-list"></i>
					</button>
				</div>
			</div>

			<% if @property.count == 0 %>
				<div class="text-center text-secondary fs-2"> Not Found ? </div>
			<% end %>
			<div id="grid_view" >
				<div class="row g-4">
				<% @property.each do |property| %>
						<div class="col-lg-3 ">
							<%= render :partial => "home/card", locals: {property: property} %>
						</div>	
				<% end %>
				</div>
			</div>
			<div id="list_view">
				<% @property.each do |property| %>
					<%= render :partial => "rent_properties/list", locals: {property: property} %>	
				<% end %>
			</div>
			<div class="text-center">
				<% unless @property.empty? %>
				  <%= paginate @property, remote: true %>
				<% end %>
				
			</div>
		</div>
	</div>
</div>		



<%= render "home/footer" %>
<script type="text/javascript">

var list = document.querySelector('#list')
var grid = document.querySelector('#grid')
var list_view = document.querySelector('#list_view')
var grid_view = document.querySelector('#grid_view')
list_view.style.display = 'none'
grid.classList.add('bg-primary');
list.style.color = "black"
grid.style.color = "white"

function myFunction(e){
if(e.id === "list"){
	list.classList.add('bg-primary');
	grid.classList.add('color_for_view');
	grid.style.color = "black"
	list.style.color = "white"
	grid_view.style.display = "none";
	list_view.style.display = "block";
	list.classList.remove('color_for_view');
	grid.classList.remove('bg-primary');
}else{
	list.classList.add('color_for_view');
	grid.classList.add('bg-primary');
	list.style.color = "black"
	grid.style.color = "white"
	list_view.style.display = 'none';
	grid_view.style.display = "block";
	list.classList.remove('bg-primary');
	grid.classList.remove('color_for_view');
}
}
</script>




